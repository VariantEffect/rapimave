% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/maveFilter.R
\name{new.mave.filter}
\alias{new.mave.filter}
\title{New MaveDB Filter Object}
\usage{
new.mave.filter(data, verbose = TRUE)
}
\arguments{
\item{data}{A data.frame containing a MaveDB data set containing 
at least the two columns "hgvs" and "score".}

\item{verbose}{Logical. If TRUE, prints status messages while loading data.}
}
\value{
a new MaveDB filter object
}
\description{
Constructor that creates a MaveDB filter object
}
\details{
The resulting object offers a number of filter functions. All these functions return 
vectors of type \code{logical}, which can be combined with \code{&} and \code{|} to form
more complex filters before being applied to the data. (See example below). The following
functions are available.
\itemize{
  \item{mutationCount()} filters by number of mutations in the variant. Parameters
    \code{min} and \code{max} default to 0 and Inf respectively.
  \item{position()} filters by the (start) position of the mutations. Parameters
    \code{min} and \code{max} default to -Inf and Inf respectively. Parameter \code{multi}
    determines whether in case of multi-mutants, the criterium must match any or all of the
    individual mutations. Allowed values are "any" and "all".
  \item{residues()} filters by amino acid residues. Parameter from and to are vectors of allowed
    ancestral and variant amino acid residues.Parameter \code{multi}
    determines whether in case of multi-mutants, the criterium must match any or all of the
    individual mutations. Allowed values are "any" and "all".
  \item{numerical()} filters by numerical columns. Parameter \code{col} is the name of the numerical
    column to filter by. Parameters \code{min} and \code{max} default to -Inf and Inf respectively.
  \item{categorical()} filters by categorical columns. Parameter \code{col} is the name of the categorical
    column (of type \code{character} or \code{factor}) to filter by. Parameter values is a vector of
    allowed values in that column to filter for.
}
}
\examples{
\dontrun{
mave <- new.rapimave()
data <- mave$getScores("SCS000001A.2")
mfilter <- new.mave.filter(data)
filter <- with(mfilter,
   position(min=5,multi="all") & residues(to="Ala",multi="all") & numerical("score",min=0.1)
)
filtered.data <- data[filter,]
}
}
